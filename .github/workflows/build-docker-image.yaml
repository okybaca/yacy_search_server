name: Build Docker Image

on:
  push:
<<<<<<< HEAD
    branches:
      - "**"
    tags:
      - "v*.*.*"
      - "Release_*"
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  actions: write

jobs:
  docker:
    if: github.repository == 'yacy/yacy_search_server'
    strategy:
      fail-fast: false
      matrix:
        include:
          - tag: ""
            suffix: "-ubuntu"
            is_default: true
            platforms: linux/amd64,linux/arm64
          - tag: alpine
            suffix: "-alpine"
            is_default: false
            platforms: linux/amd64,linux/arm64

    runs-on: ubuntu-latest
    steps:
      # docker push action, see https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

=======
    branches: 
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
  workflow_dispatch:

jobs:
  docker:
    strategy:
      matrix:
        dockerfile:
          - name: Dockerfile
            tag: 
          - name: Dockerfile.aarch64
            tag: aarch64-
          - name: Dockerfile.alpine
            tag: alpine-
          - name: Dockerfile.ArchLinux
            tag: archlinux-
          - name: Dockerfile.armv7
            tag: armv7-
    runs-on: ubuntu-latest
    steps:
>>>>>>> f29772413 (add docker build github action)
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
<<<<<<< HEAD
          images: ${{ secrets.DOCKERHUB_REPONAME }}/${{ github.event.repository.name }}
          flavor: latest=${{ matrix.is_default }}
          tags: |
            type=raw,value=latest${{ matrix.suffix }},enable=true
            #type=raw,value=sha-${{ github.sha }}${{ matrix.suffix }},enable=true
            type=raw,value='{{version}}'${{ matrix.suffix }},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=raw,value='{{major}}.{{minor}}'${{ matrix.suffix }},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=raw,value='{{major}}'${{ matrix.suffix }},enable=${{ startsWith(github.ref, 'refs/tags/') }}

=======
          images: |
            ghcr.io/MisterX2000/yacy_search_server
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
>>>>>>> f29772413 (add docker build github action)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          file: docker/${{ matrix.dockerfile.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ matrix.dockerfile.tag }}${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

