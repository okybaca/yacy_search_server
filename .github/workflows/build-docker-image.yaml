name: Build Docker Image

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
      - "Release_*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  actions: write

jobs:
  docker:
    strategy:
      fail-fast: false
      matrix:
        include:
          - tag: "" # Default Dockerfile
            platforms: linux/amd64,linux/arm64
          - tag: alpine
            platforms: linux/amd64,linux/arm64

    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          # GitHub Container Registry & Docker Hub
          images: |
            ghcr.io/${{ github.repository }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          # generate Docker tags based on the following events/attributes
          flavor: |
            latest=auto
            prefix=
            suffix=${{ matrix.tag != '' && format('-{0}', matrix.tag) || '' }},onlatest=true
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=match,pattern=Release_(\d+\.\d+),group=1
            type=match,pattern=Release_(\d+),group=1

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          # Use "Dockerfile" if matrix.tag is empty, otherwise use "Dockerfile.{tag}"
          file: docker/Dockerfile${{ matrix.tag != '' && format('.{0}', matrix.tag) || '' }}
          platforms: ${{ matrix.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
